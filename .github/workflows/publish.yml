name: 'publish'

on:
    pull_request:
        types: [closed]

jobs:
    create-release:
        if: |
            github.event.pull_request.base.ref == 'master' && 
            github.event.pull_request.merged == true &&
            contains(github.event.pull_request.labels.*.name, 'release')
        permissions:
            contents: write
        runs-on: ubuntu-20.04
        outputs:
            release_id: ${{ steps.create-release.outputs.result }}

        steps:
            - uses: actions/checkout@v4

            - name: setup node
              uses: actions/setup-node@v4
              with:
                  node-version: 20

            - name: get version
              run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

            - name: get name
              run: echo "PACKAGE_NAME=$(node -p "require('./package.json').name")" >> $GITHUB_ENV

            - name: create release
              id: create-release
              uses: actions/github-script@v6
              with:
                  script: |
                      const { data } = await github.rest.repos.createRelease({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        tag_name: `v${process.env.PACKAGE_VERSION}`,
                        name: `${process.env.PACKAGE_NAME} v${process.env.PACKAGE_VERSION}`,
                        body: 'Take a look at the assets to download and install this app.',
                        draft: true,
                        prerelease: false
                      })
                      return data.id

    build-tauri:
        needs: create-release
        permissions:
            contents: write
        strategy:
            fail-fast: false
            matrix:
                platform: [macos-latest, ubuntu-20.04, windows-latest]

        runs-on: ${{ matrix.platform }}
        steps:
            - uses: actions/checkout@v4

            - name: setup node
              uses: actions/setup-node@v4
              with:
                  node-version: 20

            - name: install Rust stable
              uses: dtolnay/rust-toolchain@stable

            - name: install dependencies (ubuntu only)
              if: matrix.platform == 'ubuntu-20.04'
              run: |
                  sudo apt-get update
                  sudo apt-g
